<%- include('header') %>

<section class="background-blue">
    <div class="container">
       <div class="row">
          <div class="col-md-6">
                <div class="titlepage">
                    <h2>Tomografías de pulmones</h2>
                    <br>
                    <% if (user) { %> 
                      <p class="font-weight-bold">¡Hola, <%= user.name %>!</p>
                    <% } %>
                    <p> Observa detenidamente la tomografía y pon a prueba tu intuición. ¿Crees que es una imagen real obtenida de un paciente o ha sido generada artificialmente por un modelo de inteligencia artificial? Si no estás completamente seguro, también puedes indicarlo. Tu evaluación es fundamental para mejorar la precisión de nuestros algoritmos y contribuir al avance de la tecnología médica. ¡Cada respuesta cuenta! </p>
                </div>
            </div>
       </div>
   </div>

   <hr>
   <div style="text-align: center; margin: 0 0;">
      <img src="/images/iconoPulmones.png" alt="Icono pulmones" style="width: 50px; height: auto;">
   </div>
   <hr>

   <div class="service_main" style="text-align: center;" id="image-gallery">
      <!-- La imagen se cargará aquí dinámicamente -->
   </div>  

   <div style="text-align: center; margin-top: 20px;">
     <button class="btn btn-success" onclick="nextImage()">Siguiente</button>
   </div>
</section>

<%- include('footer') %>

<script>
  let currentIndex = 0; // Índice para la imagen actual

  // Función para cargar imágenes desde la ruta '/get-images'
  async function loadImages() {
    try {
      const response = await fetch('/LungCT/get-images');
      const imageUrls = await response.json();
      
      // Guardamos las URLs de las imágenes en una variable global
      window.imageUrls = imageUrls;

      // Cargamos la primera imagen
      showImage(currentIndex);
    } catch (error) {
      console.error('Error al cargar las imágenes:', error);
    }
  }

  // Función para mostrar la imagen actual
  function showImage(index) {
    const imageGallery = document.getElementById('image-gallery');
    const currentImageUrl = window.imageUrls[index];

    imageGallery.innerHTML = '';

    const card = document.createElement('div');
    card.classList.add('card');
    card.style.border = '10px solid #f1f1f1';  // Marco de la foto
    card.style.boxShadow = '0px 4px 10px rgba(0, 0, 0, 0.1)';  // Sombra para dar efecto de profundidad
    card.style.borderRadius = '20px';  // Bordes redondeados como una foto
    card.style.padding = '20px';  // Margen alrededor de la imagen
    
    const cardImageContainer = document.createElement('div');
    cardImageContainer.classList.add('card-image-container');
    
    const img = document.createElement('img');
    img.src = currentImageUrl;
    img.alt = 'Imagen Tomografía Pulmonar';
    img.style.width = '100%';
    img.style.borderRadius = '15px';  // Bordes redondeados de la imagen
    img.style.marginBottom = '15px';  // Margen entre la imagen y los botones
    
    cardImageContainer.appendChild(img);
    card.appendChild(cardImageContainer);

    const buttonsDiv = document.createElement('div');
    buttonsDiv.id = 'primary-buttons';
    buttonsDiv.innerHTML = `
      <button class="btn btn-primary" onclick="handleSelection(this)">Real</button>
      <button class="btn btn-secondary dissapear" onclick="handleSelection(this)">Falso</button>
      <button class="btn btn-danger dissapear" onclick="handleSelection(this)">No estoy seguro</button>
    `;
    buttonsDiv.style.marginBottom = '20px';  // Margen entre los botones y el borde

    card.appendChild(buttonsDiv);

    const backButtonDiv = document.createElement('div');
    backButtonDiv.style.textAlign = 'center';
    backButtonDiv.style.marginTop = '20px';

    card.appendChild(backButtonDiv);

    imageGallery.appendChild(card);
  }

  // Función para ir a la siguiente imagen
  function nextImage() {
    currentIndex = (currentIndex + 1) % window.imageUrls.length; // Incrementamos el índice y lo cicla si llega al final
    showImage(currentIndex);
  }

  // Función para manejar la selección del usuario y enviar los datos al backend
  async function handleSelection(button) {
    const response = button.innerText;  // Captura la respuesta del botón presionado
    const imageUrl = window.imageUrls[currentIndex]; // URL de la imagen actual

    try {
      const res = await fetch('/LungCT/save-response', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ imageUrl, response })
      });

      const data = await res.json();
      if (res.ok) {
        // alert(data.message); 
        nextImage(); // Cargar la siguiente imagen
      } else {
        alert(`Error: ${data.error}`);
      }
    } catch (error) {
      console.error('Error al enviar la respuesta:', error);
    }
  }

  // Llama a la función para cargar las imágenes cuando se carga la página
  loadImages();
</script>
